#q <- c(1:5,1:5,1:5,1:5,NA,NA,1:5,1:5)
a <- missing_patch(q)
data_in <- q
patch <- a
blue <- NULL
patch1 <- patch
###data_in[is.na(data_in)] <- 0
#if(!(is.vector(data_in)))
#{
#  data_in <- data_in[,1]
#}
#datax <- data_in
len <- length(data_in)
data_in <- as.numeric(na.omit(data_in))
length(data_in)
datax <- data_in
max_val_patch <- which.max(patch$z)
f_first <- patch[max_val_patch,][1]
if(!is.vector(f_first))
{
f_first <- f_first[, 1]
}
f_last <- patch[max_val_patch,][2]
if(!is.vector(f_last))
{
f_last <- f_last[, 1]
}
next_val <- patch[max_val_patch,][3]
if(!is.vector(next_val))
{
next_val <- next_val[, 1]
}
#data_in <- na.omit(data_in)
#data_x_in <- data_in[1:f_first-1][!is.na(data_in[1:f_first-1])]
data_in
length(data_in)
#x1 <- AUTO_PSF(data_in[1:f_first-1],next_val)$Predicted_Values
data_in <- as.numeric(na.omit(data_in))
dataj <- data_in
k_opt <- optimum_k(dataj[1:(f_first-1)])
k_opt
w_opt <- optimum_w(dataj[1:(f_first-1)], 1)$Optimum_W
w_opt
#w_opt <- 5
jj <- f_first-1
jj
x1 <- pred_for_w(dataj[1:(f_first-1)], w_opt, k_opt, next_val)
x1
data_in1 <- rev(data_in)
data_in1
length(data_in1)
#which(is.na(data_in1))
data_in1 <- as.numeric(na.omit(data_in1))
#x2 <- AUTO_PSF(data_in1[1:f_first-1],next_val)$Predicted_Values
f_first_rev <- len - f_last
jj1 <- f_first_rev
jj1
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
#k_opt
w_opt <- optimum_w(data_in1[1:(f_first_rev)], 1)$Optimum_W
#w_opt
#w_opt <- 5
x2 <- pred_for_w(data_in1[1:(f_first_rev)], w_opt, k_opt, next_val)
x2 <- rev(x2)
x3 <- (x1+x2)/2
x1
x2
x3
#x3 <- max(x1,x2)
j <- 1
###for(i in f_first:f_last)
###{
###datax[i] <- x3[j]
###j <- j + 1
###}
datax <- insert.at(datax, (f_first - 1), x3)
data_in <- datax
blue <- append(blue,f_first)
blue <- append(blue,f_last)
limit1 <- length(data_in)
plot(data_in[1:f_first],type = "o", xlim = c(0,length(data_in)),col=c("red"), xlab = "Time Series Data", ylab=NA)
points(f_first:f_last+1, data_in[f_first:f_last+1],col="blue", type ="o",pch=22)
points(f_last+1:limit1,data_in[f_last+1:limit1],col="red", type ="o")
patch <- patch[-which.max(patch$z),]
length(data_in)
data_in1 <- rev(data_in)
length(data_in1)
max_val_patch <- which.max(patch$z)
f_first <- patch[max_val_patch,][1]
if(!is.vector(f_first))
{
f_first <- f_first[, 1]
}
f_last <- patch[max_val_patch,][2]
if(!is.vector(f_last))
{
f_last <- f_last[, 1]
}
next_val <- patch[max_val_patch,][3]
if(!is.vector(next_val))
{
next_val <- next_val[, 1]
}
#data_in <- na.omit(data_in)
#data_x_in <- data_in[1:f_first-1][!is.na(data_in[1:f_first-1])]
data_in
length(data_in)
#x1 <- AUTO_PSF(data_in[1:f_first-1],next_val)$Predicted_Values
data_in <- as.numeric(na.omit(data_in))
dataj <- data_in
k_opt <- optimum_k(dataj[1:(f_first-1)])
k_opt
w_opt <- optimum_w(dataj[1:(f_first-1)], 1)$Optimum_W
w_opt
#w_opt <- 5
jj <- f_first-1
jj
x1 <- pred_for_w(dataj[1:(f_first-1)], w_opt, k_opt, next_val)
x1
data_in1 <- rev(data_in)
data_in1
length(data_in1)
#which(is.na(data_in1))
data_in1 <- as.numeric(na.omit(data_in1))
#x2 <- AUTO_PSF(data_in1[1:f_first-1],next_val)$Predicted_Values
f_first_rev <- len - f_last
jj1 <- f_first_rev
jj1
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
#k_opt
w_opt <- optimum_w(data_in1[1:(f_first_rev)], 1)$Optimum_W
#w_opt
#w_opt <- 5
x2 <- pred_for_w(data_in1[1:(f_first_rev)], w_opt, k_opt, next_val)
x2 <- rev(x2)
x3 <- (x1+x2)/2
x1
x2
x3
#x3 <- max(x1,x2)
j <- 1
###for(i in f_first:f_last)
###{
###datax[i] <- x3[j]
###j <- j + 1
###}
datax <- insert.at(datax, (f_first - 1), x3)
data_in <- datax
blue <- append(blue,f_first)
blue <- append(blue,f_last)
limit1 <- length(data_in)
plot(data_in[1:f_first],type = "o", xlim = c(0,length(data_in)),col=c("red"), xlab = "Time Series Data", ylab=NA)
points(f_first:f_last+1, data_in[f_first:f_last+1],col="blue", type ="o",pch=22)
points(f_last+1:limit1,data_in[f_last+1:limit1],col="red", type ="o")
patch <- patch[-which.max(patch$z),]
length(data_in)
data_in1 <- rev(data_in)
length(data_in1)
dataj
dataj[1:5]
length(data())
length(dataj
)
q <- c(1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,1:5,1:5)
#q <- c(1:5,1:5,1:5,1:5,NA,NA,1:5,1:5)
a <- missing_patch(q)
data_in <- q
patch <- a
q <- c(1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,1:5,1:5)
#q <- c(1:5,1:5,1:5,1:5,NA,NA,1:5,1:5)
a <- missing_patch(q)
data_in <- q
patch <- a
blue <- NULL
patch1 <- patch
###data_in[is.na(data_in)] <- 0
#if(!(is.vector(data_in)))
#{
#  data_in <- data_in[,1]
#}
#datax <- data_in
len <- length(data_in)
data_in <- as.numeric(na.omit(data_in))
length(data_in)
datax <- data_in
max_val_patch <- which.max(patch$z)
f_first <- patch[max_val_patch,][1]
if(!is.vector(f_first))
{
f_first <- f_first[, 1]
}
f_last <- patch[max_val_patch,][2]
if(!is.vector(f_last))
{
f_last <- f_last[, 1]
}
next_val <- patch[max_val_patch,][3]
if(!is.vector(next_val))
{
next_val <- next_val[, 1]
}
#data_in <- na.omit(data_in)
#data_x_in <- data_in[1:f_first-1][!is.na(data_in[1:f_first-1])]
data_in
length(data_in)
#x1 <- AUTO_PSF(data_in[1:f_first-1],next_val)$Predicted_Values
data_in <- as.numeric(na.omit(data_in))
dataj <- data_in
k_opt <- optimum_k(dataj[1:(f_first-1)])
k_opt
w_opt <- optimum_w(dataj[1:(f_first-1)], 1)$Optimum_W
w_opt
#w_opt <- 5
jj <- f_first-1
jj
x1 <- pred_for_w(dataj[1:(f_first-1)], w_opt, k_opt, next_val)
x1
data_in1 <- rev(data_in)
data_in1
length(data_in1)
#which(is.na(data_in1))
data_in1 <- as.numeric(na.omit(data_in1))
#x2 <- AUTO_PSF(data_in1[1:f_first-1],next_val)$Predicted_Values
len1 <- length(data_in1)
f_first_rev <- len1 - f_last
jj1 <- f_first_rev
jj1
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
#k_opt
w_opt <- optimum_w(data_in1[1:(f_first_rev)], 1)$Optimum_W
#w_opt
#w_opt <- 5
x2 <- pred_for_w(data_in1[1:(f_first_rev)], w_opt, k_opt, next_val)
x2 <- rev(x2)
x3 <- (x1+x2)/2
x1
x2
x3
#x3 <- max(x1,x2)
j <- 1
###for(i in f_first:f_last)
###{
###datax[i] <- x3[j]
###j <- j + 1
###}
datax <- insert.at(datax, (f_first - 1), x3)
data_in <- datax
blue <- append(blue,f_first)
blue <- append(blue,f_last)
limit1 <- length(data_in)
plot(data_in[1:f_first],type = "o", xlim = c(0,length(data_in)),col=c("red"), xlab = "Time Series Data", ylab=NA)
points(f_first:f_last+1, data_in[f_first:f_last+1],col="blue", type ="o",pch=22)
points(f_last+1:limit1,data_in[f_last+1:limit1],col="red", type ="o")
patch <- patch[-which.max(patch$z),]
length(data_in)
data_in1 <- rev(data_in)
length(data_in1)
max_val_patch <- which.max(patch$z)
f_first <- patch[max_val_patch,][1]
if(!is.vector(f_first))
{
f_first <- f_first[, 1]
}
f_last <- patch[max_val_patch,][2]
if(!is.vector(f_last))
{
f_last <- f_last[, 1]
}
next_val <- patch[max_val_patch,][3]
if(!is.vector(next_val))
{
next_val <- next_val[, 1]
}
#data_in <- na.omit(data_in)
#data_x_in <- data_in[1:f_first-1][!is.na(data_in[1:f_first-1])]
data_in
length(data_in)
#x1 <- AUTO_PSF(data_in[1:f_first-1],next_val)$Predicted_Values
data_in <- as.numeric(na.omit(data_in))
dataj <- data_in
k_opt <- optimum_k(dataj[1:(f_first-1)])
k_opt
w_opt <- optimum_w(dataj[1:(f_first-1)], 1)$Optimum_W
w_opt
#w_opt <- 5
jj <- f_first-1
jj
x1 <- pred_for_w(dataj[1:(f_first-1)], w_opt, k_opt, next_val)
x1
data_in1 <- rev(data_in)
data_in1
length(data_in1)
#which(is.na(data_in1))
data_in1 <- as.numeric(na.omit(data_in1))
#x2 <- AUTO_PSF(data_in1[1:f_first-1],next_val)$Predicted_Values
len1 <- length(data_in1)
f_first_rev <- len1 - f_last
jj1 <- f_first_rev
jj1
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
#k_opt
w_opt <- optimum_w(data_in1[1:(f_first_rev)], 1)$Optimum_W
#w_opt
#w_opt <- 5
x2 <- pred_for_w(data_in1[1:(f_first_rev)], w_opt, k_opt, next_val)
x2 <- rev(x2)
x3 <- (x1+x2)/2
x1
x2
x3
#x3 <- max(x1,x2)
j <- 1
###for(i in f_first:f_last)
###{
###datax[i] <- x3[j]
###j <- j + 1
###}
datax <- insert.at(datax, (f_first - 1), x3)
data_in <- datax
blue <- append(blue,f_first)
blue <- append(blue,f_last)
limit1 <- length(data_in)
plot(data_in[1:f_first],type = "o", xlim = c(0,length(data_in)),col=c("red"), xlab = "Time Series Data", ylab=NA)
points(f_first:f_last+1, data_in[f_first:f_last+1],col="blue", type ="o",pch=22)
points(f_last+1:limit1,data_in[f_last+1:limit1],col="red", type ="o")
patch <- patch[-which.max(patch$z),]
length(data_in)
data_in1 <- rev(data_in)
length(data_in1)
max_val_patch <- which.max(patch$z)
f_first <- patch[max_val_patch,][1]
if(!is.vector(f_first))
{
f_first <- f_first[, 1]
}
f_last <- patch[max_val_patch,][2]
if(!is.vector(f_last))
{
f_last <- f_last[, 1]
}
next_val <- patch[max_val_patch,][3]
if(!is.vector(next_val))
{
next_val <- next_val[, 1]
}
#data_in <- na.omit(data_in)
#data_x_in <- data_in[1:f_first-1][!is.na(data_in[1:f_first-1])]
data_in
length(data_in)
#x1 <- AUTO_PSF(data_in[1:f_first-1],next_val)$Predicted_Values
data_in <- as.numeric(na.omit(data_in))
dataj <- data_in
k_opt <- optimum_k(dataj[1:(f_first-1)])
k_opt
w_opt <- optimum_w(dataj[1:(f_first-1)], 1)$Optimum_W
w_opt
#w_opt <- 5
jj <- f_first-1
jj
x1 <- pred_for_w(dataj[1:(f_first-1)], w_opt, k_opt, next_val)
x1
data_in1 <- rev(data_in)
data_in1
length(data_in1)
#which(is.na(data_in1))
data_in1 <- as.numeric(na.omit(data_in1))
#x2 <- AUTO_PSF(data_in1[1:f_first-1],next_val)$Predicted_Values
len1 <- length(data_in1)
f_first_rev <- len1 - f_last
jj1 <- f_first_rev
jj1
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
#k_opt
w_opt <- optimum_w(data_in1[1:(f_first_rev)], 1)$Optimum_W
#w_opt
#w_opt <- 5
x2 <- pred_for_w(data_in1[1:(f_first_rev)], w_opt, k_opt, next_val)
x2 <- rev(x2)
x3 <- (x1+x2)/2
x1
x2
x3
#x3 <- max(x1,x2)
j <- 1
###for(i in f_first:f_last)
###{
###datax[i] <- x3[j]
###j <- j + 1
###}
datax <- insert.at(datax, (f_first - 1), x3)
data_in <- datax
blue <- append(blue,f_first)
blue <- append(blue,f_last)
limit1 <- length(data_in)
plot(data_in[1:f_first],type = "o", xlim = c(0,length(data_in)),col=c("red"), xlab = "Time Series Data", ylab=NA)
points(f_first:f_last+1, data_in[f_first:f_last+1],col="blue", type ="o",pch=22)
points(f_last+1:limit1,data_in[f_last+1:limit1],col="red", type ="o")
patch <- patch[-which.max(patch$z),]
length(data_in)
data_in1 <- rev(data_in)
length(data_in1)
library(imputePSF)
q <- c(1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,1:5,1:5)
library(PSF)
ff <- c(1,2,1)
optimum_k(ff)
ff <- c(1,2)
optimum_k(ff)
pred_for_w(iris[2],3,0,5)
pred_for_w(iris[2],3,2,5)
AUTO_PSF(iris[2],5)
library(imputePSF)
library(imputePSF)
tryCatch(
k_opt <- optimum_k(data_in1[1:(f_first_rev)]),
return(10))
tryCatch(
k_opt <- optimum_k(data_in1[1:(f_first_rev)]),
10)
tryCatch(
k_opt <- optimum_k(data_in1[1:(f_first_rev)])
10)
a <- tryCatch(optimum_k(data_in1[1:(f_first_rev)],10)
)
a <- tryCatch(optimum_k(data_in1[1:(f_first_rev)],a<-10))
a <- tryCatch(optimum_k(data_in1[1:(f_first_rev)]),a<-10)
a <- tryCatch(optimum_k(data_in1[1:(f_first_rev)]),a<-10))
library(imputePSF)
library(imputePSF)
dataIn <- c(1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5,1:5)
x <- 10
x <- x/100
# Inputs: dataIn, miss_per, repetition
#repetition <- 5      # number of repetition
a <- length(dataIn)
b <- a * x
b <- round(b)
###c <- a-b
c <- sample(1:a, 1, replace = TRUE)
while(c > a-b)
{
c <- sample(1:a, 1, replace = TRUE)
}
out <- NULL
dataIn <- dataIn1
dataIn[c:(c+b)] <- NA
dataIn
missing_patch(dataIn)
a<- missing_patch(dataIn)
a
heal_data(dataIn,a)
library(imputeTestbench)
impute_errors()
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
library(imputePSF)
q <- c(1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,1:5,1:5)
a<- missing_patch(q)
heal_data(q,a)
library(imputePSF)
q <- c(1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,NA,NA,NA,1:5,NA,NA,1:5,1:5)
a<- missing_patch(q)
heal_data(q,a)
plot(iris[2])
heal_data(q,a)$Plot
library(imputePSF)
a<- missing_patch(q)
heal_data(q,a)
library(imputePSF)
a<- missing_patch(q)
heal_data(q,a)
d <- c(1:5,1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,1:5,1:5,1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,1:5,1:5,1:5,1:5,1:5)
a <- missing_patch(d)
heal_data(d,a)
d <- c(1:5,1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,1:5,1:5,1:5,NA,NA,NA,NA,NA,1:5,1:5,1:5,1:5)
a <- missing_patch(d)
heal_data(d,a)
library(devtools)
load_all()
library(imputePSF)
impute_PSF(d)
library(imputePSF)
library(devtools)
load_all()
library(imputePSF)
library(imputePSF)
a <- missing_patch(d)
heal_data(d,a)
library(imputePSF)
a <- missing_patch(d)
heal_data(d,a)
library(imputePSF)
a <- missing_patch(d)
heal_data(d,a)
library(devtools)
load_all()
library(imputePSF)
library(devtools)
load_all()
library(imputePSF)
library(devtools)
load_all()
library(imputePSF)
